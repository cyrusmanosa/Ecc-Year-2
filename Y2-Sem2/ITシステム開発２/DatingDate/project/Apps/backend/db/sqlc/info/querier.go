// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type InfoQuerier interface {
	AllChangeTargetUserList(ctx context.Context) ([]Changetargetuser, error)
	AllTargetUserList(ctx context.Context) ([]Targetlist, error)
	CanChangeSearchAccompany(ctx context.Context, arg CanChangeSearchAccompanyParams) ([]Canchangeinformation, error)
	CanChangeSearchHobby(ctx context.Context, arg CanChangeSearchHobbyParams) ([]Canchangeinformation, error)
	CanChangeSearchLover(ctx context.Context, arg CanChangeSearchLoverParams) ([]Canchangeinformation, error)
	CreateAccompany(ctx context.Context, arg CreateAccompanyParams) (Accompany, error)
	CreateChangeTargetUser(ctx context.Context, arg CreateChangeTargetUserParams) (Changetargetuser, error)
	CreateContact(ctx context.Context, arg CreateContactParams) (Contact, error)
	CreateHobby(ctx context.Context, arg CreateHobbyParams) (Hobby, error)
	CreateImage(ctx context.Context, arg CreateImageParams) (Image, error)
	CreateLover(ctx context.Context, arg CreateLoverParams) (Lover, error)
	CreatePayment(ctx context.Context, arg CreatePaymentParams) (Payment, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUserCanChangeInformation(ctx context.Context, arg CreateUserCanChangeInformationParams) (Canchangeinformation, error)
	CreateUserFixInformation(ctx context.Context, arg CreateUserFixInformationParams) (Fixinformation, error)
	DeleteAccompany(ctx context.Context, userID int32) error
	DeleteCanChangeInformation(ctx context.Context, userID int32) error
	DeleteChangeTargetUser(ctx context.Context, userID int32) error
	DeleteContact(ctx context.Context, contactID int32) error
	DeleteHobby(ctx context.Context, userID int32) error
	DeleteImage(ctx context.Context, userID int32) error
	DeleteLover(ctx context.Context, userID int32) error
	DeleteTargetList(ctx context.Context, userID int32) error
	DeleteUser(ctx context.Context, userID int32) error
	FixSearchAccompany(ctx context.Context, arg FixSearchAccompanyParams) ([]Fixinformation, error)
	FixSearchHobby(ctx context.Context, arg FixSearchHobbyParams) ([]Fixinformation, error)
	FixSearchLover(ctx context.Context, arg FixSearchLoverParams) ([]Fixinformation, error)
	GetAccompany(ctx context.Context, userID int32) (Accompany, error)
	GetChangeTargetUserList(ctx context.Context, userID int32) (Changetargetuser, error)
	GetHobby(ctx context.Context, userID int32) (Hobby, error)
	GetLover(ctx context.Context, userID int32) (Lover, error)
	GetPayment(ctx context.Context, payID uuid.UUID) (Payment, error)
	GetRowCount(ctx context.Context, userID int32) (int32, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetTargetUserList(ctx context.Context, userID int32) (Targetlist, error)
	GetUserCanChangeInformation(ctx context.Context, userID int32) (Canchangeinformation, error)
	GetUserContactList(ctx context.Context, contactID int32) (Contact, error)
	GetUserFixInformation(ctx context.Context, userID int32) (Fixinformation, error)
	GetUserimageData(ctx context.Context, userID int32) (Image, error)
	ListAccompany(ctx context.Context) ([]Accompany, error)
	ListCanChangeInformation(ctx context.Context) ([]Canchangeinformation, error)
	ListContact(ctx context.Context) ([]Contact, error)
	ListFixInformation(ctx context.Context) ([]Fixinformation, error)
	ListHobby(ctx context.Context) ([]Hobby, error)
	ListLover(ctx context.Context) ([]Lover, error)
	ListimagesList(ctx context.Context) ([]Image, error)
	LoginAtEmail(ctx context.Context, email string) (Fixinformation, error)
	TargetUserList(ctx context.Context, arg TargetUserListParams) (Targetlist, error)
	UpdateAccompany(ctx context.Context, arg UpdateAccompanyParams) (Accompany, error)
	UpdateHobby(ctx context.Context, arg UpdateHobbyParams) (Hobby, error)
	UpdateImage(ctx context.Context, arg UpdateImageParams) (Image, error)
	UpdateInformation(ctx context.Context, arg UpdateInformationParams) (Canchangeinformation, error)
	UpdateLover(ctx context.Context, arg UpdateLoverParams) (Lover, error)
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) (Fixinformation, error)
	UpdateTargetList(ctx context.Context, arg UpdateTargetListParams) (Targetlist, error)
	UpdateUserContact(ctx context.Context, arg UpdateUserContactParams) (Contact, error)
}

var _ InfoQuerier = (*Queries)(nil)
