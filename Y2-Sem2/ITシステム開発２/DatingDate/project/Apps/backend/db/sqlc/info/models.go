// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Accompany struct {
	UserID        int32              `json:"user_id"`
	Era           int32        `json:"era"`
	Speaklanguage []string           `json:"speaklanguage"`
	FindType      string        `json:"find_type"`
	Sociability   string        `json:"sociability"`
	InfoChangedAt pgtype.Timestamptz `json:"info_changed_at"`
}

type Canchangeinformation struct {
	UserID        int32              `json:"user_id"`
	Nickname      string        `json:"nickname"`
	City          string        `json:"city"`
	Sexual        string        `json:"sexual"`
	Height        int32        `json:"height"`
	Weight        int32        `json:"weight"`
	Speaklanguage []string           `json:"speaklanguage"`
	Education     string        `json:"education"`
	Job           string        `json:"job"`
	AnnualSalary  int32        `json:"annual_salary"`
	Sociability   string        `json:"sociability"`
	HobbyType     string        `json:"hobby_type"`
	Experience    int32        `json:"experience"`
	AccompanyType string        `json:"accompany_type"`
	Religious     string        `json:"religious"`
	Introduce     string        `json:"introduce"`
	InfoChangedAt pgtype.Timestamptz `json:"info_changed_at"`
}

type Changetargetuser struct {
	UserID       int32              `json:"user_id"`
	ChangeUserID int32              `json:"change_user_id"`
	Reason       string             `json:"reason"`
	Frequency    int32              `json:"frequency"`
	ChangeTime   pgtype.Timestamptz `json:"change_time"`
}

type Contact struct {
	ContactID   int32              `json:"contact_id"`
	UserID      int32              `json:"user_id"`
	ContactType string             `json:"contact_type"`
	Message     string             `json:"message"`
	Status      string        `json:"status"`
	ContactAt   pgtype.Timestamptz `json:"contact_at"`
}

type Fixinformation struct {
	UserID            int32              `json:"user_id"`
	FirstName         string             `json:"first_name"`
	LastName          string             `json:"last_name"`
	Email             string             `json:"email"`
	HashedPassword    string        `json:"hashed_password"`
	Birth             string             `json:"birth"`
	Country           string             `json:"country"`
	Gender            string             `json:"gender"`
	Blood             string             `json:"blood"`
	Age               int32              `json:"age"`
	Constellation     string             `json:"constellation"`
	Certification     bool        `json:"certification"`
	CreatedAt         pgtype.Timestamptz `json:"created_at"`
	PasswordChangedAt pgtype.Timestamptz `json:"password_changed_at"`
	Role              string             `json:"role"`
}

type Hobby struct {
	UserID        int32              `json:"user_id"`
	Era           int32        `json:"era"`
	City          []string           `json:"city"`
	Gender        string        `json:"gender"`
	Speaklanguage []string           `json:"speaklanguage"`
	FindType      string        `json:"find_type"`
	Experience    int32        `json:"experience"`
	InfoChangedAt pgtype.Timestamptz `json:"info_changed_at"`
}

type Image struct {
	UserID int32  `json:"user_id"`
	Img1   []byte `json:"img1"`
	Img2   []byte `json:"img2"`
	Img3   []byte `json:"img3"`
	Img4   []byte `json:"img4"`
	Img5   []byte `json:"img5"`
}

type Lover struct {
	UserID        int32              `json:"user_id"`
	MinAge        int32        `json:"min_age"`
	MaxAge        int32        `json:"max_age"`
	City          []string           `json:"city"`
	Gender        string        `json:"gender"`
	Sexual        string        `json:"sexual"`
	Speaklanguage []string           `json:"speaklanguage"`
	InfoChangedAt pgtype.Timestamptz `json:"info_changed_at"`
}

type Payment struct {
	PayID       uuid.UUID          `json:"pay_id"`
	Fullname    string             `json:"fullname"`
	PaymentType string             `json:"payment_type"`
	Amount      int32              `json:"amount"`
	Product     string             `json:"product"`
	PayAt       pgtype.Timestamptz `json:"pay_at"`
}

type Session struct {
	ID          uuid.UUID          `json:"id"`
	UserID      int32              `json:"user_id"`
	AccessToken string             `json:"access_token"`
	Status      string        `json:"status"`
	IsBlocked   bool               `json:"is_blocked"`
	ExpiresAt   pgtype.Timestamptz `json:"expires_at"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}



type Targetlist struct {
	UserID    int32              `json:"user_id"`
	Target1ID int32              `json:"target_1_id"`
	T1Type    string             `json:"t1_Type"`
	Target2ID int32        `json:"target_2_id"`
	T2Type    string        `json:"t2_Type"`
	Target3ID int32        `json:"target_3_id"`
	T3Type    string        `json:"t3_Type"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}
